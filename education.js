// git init - инициализация гита
// cd .git - переход в папку гит
// ls - посмотреть содержание папки
// cd.. - выйти наверх из текущей папки(в моей консоли нельзя)
// git status - узнать статус гита(есть ли коммиты/изменения/конфликты и т. д.)
// если файл красненький - это значит, что гит еще за ним не следит
// git add education.js - добавить папку education.js, чтобы гит за ней следил
// -m - это сокращенно message
// git commit -m "Start" - добавляет коммит-строку
// git log - посмотреть список коммитов
// commit 7833b34e4a7e1231b845698817bf85ac8ac06577 - id коммита, чтобы его посмотреть подробней, пишем: git show 7833b34e4a7e1231b845698817bf85ac8ac06577
function addNumber(a, b) {
  return a + b;
};

// git diff - увидеть наши текущие изменения в отслеживаемых файлах
// чтобы оставить коммит, нужно обязательно добавить git add файл перед коммитом, чтобы выбрать какие файлы мы коммитим
// чтобы выйти из показа коммитов надо нажать esc и написать :wq (возвращает в вс-код)
// git add . - добавить все измененные файлы в коммит
// заливание на гитхаб: 
// 1. создать репозиторий
// 2. из инструкции скопировать 
// git remote add origin https://github.com/MYiLA/git-education.git
// git push -u origin master (если не связан акк с редактором, то просит пароль/логин. иначе не просит)

// Ветки в гите

// git branch - посмотреть список веток в гите. звездочка показывает текущую ветку
// git branch implement-new-logic - создает новую ветку с названием implement-new-logic
// git checkout - переходит на ветку
// git branch -d - удаляет ветку

// git checkout -b develop - создает новую ветку develop (сокращенная запись)
// git checkout -b release/1.0 - создание ветки release/1.0 релизы все имеют версионность
// git flow feature start implement-registration - создать фичу(начало работы над фичей)
// git flow feature finish implement-registration - окончание работы над фичей